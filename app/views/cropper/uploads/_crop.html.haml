- upload ||= @upload
- prefix = upload.holder_column

- target_w = upload.crop_width
- target_h = upload.crop_height
- max_w = upload.precrop_width
- max_h = upload.precrop_height

- scale_w = upload.scale_width || max_w * 3 / 4
- scale_h = upload.scale_height || max_h * 3 / 4
- offset_l = upload.offset_left || (target_w - scale_w)/2
- offset_t = upload.offset_top || (target_h - scale_h)/2

.cropper
  .preview{:style => "width: #{scale_w}px; height: #{scale_h}px; top: #{offset_t}px; left: #{offset_l}px"}
    %img{:src => upload.file.url(:precrop)}

  .report
    target_w:
    %span.target_w
      = target_w
    %br
    target_h:
    %span.scale_h
      = target_h
    %br
    max_w:
    %span.max_w
      = max_w
    %br
    max_h:
    %span.max_h
      = max_h
    %br
    scale_w:
    %span.scale_w
      = scale_w
    %br
    scale_h:
    %span.scale_h
      = scale_h
    %br
    offset_l:
    %span.offset_l
      = offset_l
    %br
    offset_t:
    %span.offset_t
      = offset_t

  = fields_for upload.holder do |hf|
    = hf.fields_for :"#{upload.holder_column}_upload", upload do |uf|
      %fieldset.crop
        = uf.hidden_field :id
        = uf.hidden_field :offset_left, :value => offset_l, :class => 'ol'
        = uf.hidden_field :offset_top, :value => offset_t, :class => 'ot'
        .scaler
          %p.range
            = uf.range_field :scale_width, :min => target_w, :max => max_w, :value => scale_w, :class => 'sw'
            = uf.hidden_field :scale_height, :value => scale_h, :class => 'sh'
